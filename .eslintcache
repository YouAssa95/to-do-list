[{"C:\\Users\\youss\\Documents\\Linkedin Learning\\project\\to-do-list\\src\\index.js":"1","C:\\Users\\youss\\Documents\\Linkedin Learning\\project\\to-do-list\\src\\components\\App.js":"2","C:\\Users\\youss\\Documents\\Linkedin Learning\\project\\to-do-list\\src\\components\\ToDoList.js":"3","C:\\Users\\youss\\Documents\\Linkedin Learning\\project\\to-do-list\\src\\components\\NavBar.js":"4","C:\\Users\\youss\\Documents\\Linkedin Learning\\project\\to-do-list\\src\\components\\AddTask.js":"5","C:\\Users\\youss\\Documents\\Linkedin Learning\\project\\to-do-list\\src\\initialData.js":"6","C:\\Users\\youss\\Documents\\Linkedin Learning\\project\\to-do-list\\src\\components\\ToDo.js":"7","C:\\Users\\youss\\Documents\\Linkedin Learning\\project\\to-do-list\\src\\components\\Fetching.js":"8"},{"size":232,"mtime":1611096547100,"results":"9","hashOfConfig":"10"},{"size":2267,"mtime":1611253104251,"results":"11","hashOfConfig":"10"},{"size":1207,"mtime":1611164443925,"results":"12","hashOfConfig":"10"},{"size":820,"mtime":1611170440382,"results":"13","hashOfConfig":"10"},{"size":1017,"mtime":1611169353051,"results":"14","hashOfConfig":"10"},{"size":330,"mtime":1611152723363,"results":"15","hashOfConfig":"10"},{"size":859,"mtime":1611164743678,"results":"16","hashOfConfig":"10"},{"size":191,"mtime":1611253037703,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1enzh2i",{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\youss\\Documents\\Linkedin Learning\\project\\to-do-list\\src\\index.js",[],["37","38"],"C:\\Users\\youss\\Documents\\Linkedin Learning\\project\\to-do-list\\src\\components\\App.js",["39"],"import React from 'react'\r\nimport NavBar from './NavBar'\r\nimport ToDoList from './ToDoList'\r\nimport AddTask from './AddTask'\r\nimport {BrowserRouter, Switch, Route} from 'react-router-dom'\r\nimport initialData from '../initialData'\r\nimport uniqueid from 'uniqueid'\r\nimport Fetching from \"./Fetching\";\r\n\r\nclass App extends React.Component{\r\n\r\n    state = {\r\n        tasks: initialData\r\n    }\r\n\r\n    componentDidUpdate = () =>{\r\n        console.log(\"componentDidUpdate\");\r\n    }\r\n    componentDidMount = () => {\r\n        let delay = Math.floor(Math.random() * 5000)\r\n        setTimeout(() => {\r\n          this.setState({\r\n            fetching: false,\r\n            tasks : initialData\r\n          })\r\n        }, delay)\r\n        console.log(\"componentDidMount\");\r\n    }\r\n\r\n    onToggleCompleted = (taskId) => {\r\n        let taskToUpdate = this.state.tasks.find(task => task.id === taskId)\r\n        taskToUpdate.completed = !taskToUpdate.completed\r\n\r\n        this.setState(prevState => (\r\n            prevState.tasks.map(task => {\r\n                return task.id === taskId ?  taskToUpdate : task\r\n            })\r\n        ))\r\n    }\r\n\r\n    onAddTask = (newTaskName) => {\r\n        let newTask = {\r\n            id: uniqueid(),\r\n            name: newTaskName,\r\n            completed: false\r\n        }\r\n\r\n        this.setState(prevState => ({\r\n            tasks: [...prevState.tasks, newTask]\r\n        }))\r\n    }\r\n\r\n    onDeleteCompleted = () =>{\r\n        this.setState(prevState => {\r\n            let newState = prevState.tasks.filter( task => !task.completed)\r\n            return{\r\n                tasks : newState\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n\r\n    render(){\r\n        return(\r\n            <section id=\"todo\">\r\n                <BrowserRouter>\r\n                    <Switch>\r\n                        <Route path=\"/add-task\" render={(props) => <AddTask {...props} onAddTask={this.onAddTask} />} />\r\n                        <Route path=\"/:filter?\" render={(props) => <ToDoList {...props} tasks={this.state.tasks} onToggleCompleted={this.onToggleCompleted} />} />\r\n                    </Switch>\r\n                    <NavBar  onDeleteCompleted = {this.onDeleteCompleted }/>\r\n                </BrowserRouter>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App","C:\\Users\\youss\\Documents\\Linkedin Learning\\project\\to-do-list\\src\\components\\ToDoList.js",[],"C:\\Users\\youss\\Documents\\Linkedin Learning\\project\\to-do-list\\src\\components\\NavBar.js",[],"C:\\Users\\youss\\Documents\\Linkedin Learning\\project\\to-do-list\\src\\components\\AddTask.js",[],"C:\\Users\\youss\\Documents\\Linkedin Learning\\project\\to-do-list\\src\\initialData.js",[],"C:\\Users\\youss\\Documents\\Linkedin Learning\\project\\to-do-list\\src\\components\\ToDo.js",["40"],"import React from \"react\";\r\nimport initialData from \"../initialData\";\r\n\r\n\r\nclass ToDo extends React.Component {\r\n\r\n    state = {\r\n        completed : this.props.task.completed\r\n    }\r\n\r\n    toggleCompleted = () => {\r\n        this.setState(\r\n            prevState => ({\r\n                completed : !prevState.completed \r\n            }))\r\n        this.props.onToggleCompleted(this.props.task.id)\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <li className={\"list-group-item d-flex align-tiems-center \" + (this.state.completed ? 'bg-success' : null) }>\r\n                {this.props.task.name\r\n                }\r\n                <button className={\"btn btn-sm ml-auto \" + (this.state.completed ? 'btn-success' : 'btn-outline-success') } onClick={this.toggleCompleted}>&#x2713;</button>\r\n            </li>\r\n        )\r\n    } \r\n}\r\nexport default ToDo;","C:\\Users\\youss\\Documents\\Linkedin Learning\\project\\to-do-list\\src\\components\\Fetching.js",["41"],{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","severity":1,"message":"47","line":8,"column":8,"nodeType":"48","messageId":"49","endLine":8,"endColumn":16},{"ruleId":"46","severity":1,"message":"50","line":2,"column":8,"nodeType":"48","messageId":"49","endLine":2,"endColumn":19},{"ruleId":"46","severity":1,"message":"51","line":4,"column":7,"nodeType":"48","messageId":"49","endLine":4,"endColumn":15},"no-native-reassign",["52"],"no-negated-in-lhs",["53"],"no-unused-vars","'Fetching' is defined but never used.","Identifier","unusedVar","'initialData' is defined but never used.","'Fetching' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]